#+TITLE: Org-octopress -- org-mode in octopress. (forked)
#+AUTHOR: Yoshinari Nomura (乃村 能成)
#+AUTHOR: Aqeel Akber <aqeel@aqeelakber.com>
#+DATE: 2013-03-19
#+lastmod: [2024-09-16 Mon 21:23]

* About admiralakber's fork
I ([[https://aqeelakber.com][admiralakber]]) use this fork for my blog ([[https://gitlab.com/admiralakber/aqeelakber.com][gitlab]]).

So far, the only modification is adding the ~lastmod~ variable in export. Using the elisp in [[last modified code][sec: last modified code]], you can then use the variable ~page.lastmod~ in your jekyll templates, for example, like [[https://gitlab.com/admiralakber/aqeelakber.com/-/blob/38e7d89ac489f1039f8dba5033ccee8593d95c3f/_layouts/post.html][this (line 20)]].

You may find updated versions of this fork at [[https://github.com/admiralakber/org-octopress]]. Kudos goes to Yoshinari Nomura for most of the work.

** last modified code
Update Org files with last modified date when =#+lastmod:= is available.

Note, changing the variable =time-stamp-format= at global scope is controversial according to [[https://www.emacswiki.org/emacs/TimeStamp][Emacs Wiki: Time Stamp]].
#+begin_src elisp
(setq time-stamp-active t
      time-stamp-start "#\\+lastmod:[ \t]*"
      time-stamp-end "$"
      time-stamp-format "[%04Y-%02m-%02d %a %H:%M]")
(add-hook 'before-save-hook 'time-stamp nil)
#+end_src

* Original README below

[[http://melpa.org/#/org-octopress][file:http://melpa.org/packages/org-octopress-badge.svg]]

* What is Org-octopress?
  Org-octopress is a package to help users those who want to write
  blog articles in org-style using [[http://octopress.org/][Octopress]] (or Jekyll).

  *Note*: This package is compatible with the org 9.0 system.

* Requirements
** Necessary packages:
   + orglue :: Add some functionality to org-mode.
               https://github.com/yoshinari-nomura/orglue
   + emacs-ctable :: Table Component for elisp
                     https://github.com/kiwanami/emacs-ctable

** Recommended packages: 
   + epic :: Evernote Picker for Cocoa Emacs (Mac user Only)
             https://github.com/yoshinari-nomura/epic

* How Org-octopress works?
** Assumed directory tree:
   : + octopress
   :   + source
   :     + blog   <- (1) You compose YYYY-MM-DD-title.org
   :     + _posts <- (2) ox-jekyll.el exports to YYYY-MM-DD-title.html (w/ YAML)
   :   + public
   :     + blog   <- (3) Jekyll exports to YYYY-MM-DD-title.html (w/o YAML).

   If you have some pictures to be included in your articles,
   I recommend you to locate them at a sub-directory of blog/.
   It'll nice to maintain the relative position with article files.

   In this work flow, YYYY-MM-DD-title.org will be also published to
   your web site. If you want to hide the original Org files, you will
   have to setup Octopress publish settings to exclude org files in
   your blog/ directory.

* Basic Settings
** Emacs Settings:
  : (require 'org-octopress)
  : (setq org-octopress-directory-top       "~/octopress/source")
  : (setq org-octopress-directory-posts     "~/octopress/source/_posts")
  : (setq org-octopress-directory-org-top   "~/octopress/source")
  : (setq org-octopress-directory-org-posts "~/octopress/source/blog")
  : (setq org-octopress-setup-file          "~/org-sty/setupfile.org")

** Octopress Settings:
   In octopress/_config.yml, you must set the permelink attribute:
   : permalink: /blog/:year-:month-:day-:title.html

* How to use
  1) M-x org-octopress
  2) Compose YYYY-MM-DD-title.org in source/blog directory.
  3) C-c C-e (org-export-dispatch) and type ``P'' ``x'' ``octopress''
  4) In command line terminal:
     : rake preview
     (see [[http://octopress.org/docs/][Octopress Documentation - Octopress]] for details)
  5) Check your article in browser.

* Contact Info
  The updated version might be available from:
  http://github.com/yoshinari-nomura/org-octopress
